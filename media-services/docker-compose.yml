version: "3.7"
services:
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - ${OMBI_PORT}:3579
    volumes:
      - ${DOCKER_ROOT}/ombi:/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.port=${OMBI_PORT}
      - traefik.http.routers.ombi.rule=Host(`media.ricardoalcaraz.dev`)
      - traefik.http.routers.ombi.tls.certresolver=le
      - traefik.http.routers.ombi.entrypoints=websecure
      - traefik.docker.network=web
    networks:
      - web
      - media

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
        - ${DOCKER_ROOT}/sonarr:/config
        - ${MEDIA_ROOT}/tv:/tv
        - ${DL_DIR}:/data
        - ${DL_DIR}:/downloads
    ports:
        - ${SONARR_PORT}:8989
    restart: unless-stopped
    networks:
      - media
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
      - ${DOCKER_ROOT}/radarr:/config
      - ${MEDIA_ROOT}/movies:/movies
      - ${DL_DIR}:/data
      - ${DL_DIR}:/downloads
    ports:
      - ${RADARR_PORT}:7878
    restart: unless-stopped
    networks:
      - media

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_ROOT}/jackett:/config
      - ${DL_DIR}:/data
    ports:
      - ${JACKETT_PORT}:9117
    restart: unless-stopped
    networks:
      - media

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_ROOT}/sabnzbd:/config
      - ${DL_DIR}:/data
      - ${DL_DIR}/incomplete:/incomplete-downloads
    ports:
      - ${SABNZBD_PORT}:8080
    restart: unless-stopped
    networks:
      - media

  deluge:
    image: binhex/arch-delugevpn
    container_name: deluge
    volumes:
      - ${DOCKER_ROOT}/deluge:/config
      - ${DL_DIR}:/data
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    environment:
      - OPENVPN_PROVIDER=PIA
      - OPENVPN_CONFIG=ca_toronto
      - OPENVPN_USERNAME=user
      - OPENVPN_PASSWORD=pass
      - PUID=${PUID}
      - PGID=${PGID}
      - LAN=192.168.0.0/16
      - VPN_ENABLED=yes
      - VPN_USER=${VPN_USER}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=custom
      - VPN_CLIENT=openvpn
      - STRICT_PORT_FORWARD=yes
      - ENABLE_PRIVOXY=yes
      - LAN_NETWORK=192.168.0.0/24
      - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
      - DELUGE_DAEMON_LOG_LEVEL=info
      - DELUGE_WEB_LOG_LEVEL=info
      - DEBUG=false
      - UMASK=000
    ports:
      - "8112:8112"
      - "8118:8118"
      - "58846:58846"
      - "58946:58946"
    cap_add:
      - NET_ADMIN
    networks:
      - media
      
networks:
  web:
    external: true
  media: